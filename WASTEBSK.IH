
/*
 * This file was generated by the SOM Compiler.
 * FileName: wastebsk.ih.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitih: 1.59
 */

#ifndef wastebsk_ih
#define wastebsk_ih


/*
 * Passthru lines: File: "C.ih", "before"
 */
#define IDKEY_AUTOEMPTY 9000

#include "wastebsk.ph"

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
#define SOM_Scope extern "C"
#else
#define SOM_Scope extern
#endif
#endif

#ifndef SOM_CurrentClass
#define SOM_CurrentClass WPWasteBsktCClassData.parentMtab
#endif

#define WPWasteBskt_MaxNoMethods 2

/*
 * Instance data
 */
typedef struct {
	BOOL bAutoEmpty;
} WPWasteBsktData;

/*
 * Instance variable access macros
 */
#define _bAutoEmpty (somThis->bAutoEmpty)

/*
 * Getdata macro
 */
#define WPWasteBsktGetData(somSelf) \
    ((WPWasteBsktData *) \
        SOM_DataResolve(somSelf, WPWasteBsktCClassData.instanceDataToken))

/*
 * Trace/Debug macro
 */
#ifndef WPWasteBsktMethodDebug
#define WPWasteBsktMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * Begin stuff that only goes in the primary file
 */
#ifdef WPWasteBskt_Class_Source

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_WPWasteBsktCClassData.parentMtab
#undef SOMInstance
#define SOMInstance WPWasteBsktCClassData.parentMtab

#ifndef M_WPWasteBskt_Class_Source
#define M_WPWasteBskt_Class_Source
#endif    /* M_WPWasteBskt_Class_Source */

/*
 * Generate the Apply Stubs.
 */
#pragma linkage(somAP_QueryAutoEmptyFlag, system)
static BOOL   SOMLINK somAP_QueryAutoEmptyFlag(WPWasteBskt *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (WPWasteBskt_QueryAutoEmptyFlag(somSelf));
}

#pragma linkage(somAP_SetAutoEmptyFlag, system)
static BOOL   SOMLINK somAP_SetAutoEmptyFlag(WPWasteBskt *somSelf,
		somId __id,
		somId __desc,
		va_list __ap)
{
	BOOL bAutoEmpty = va_arg(__ap, BOOL);
	__ap; __id; __desc;           /* Referenced to prevent warning msg */

	return (WPWasteBskt_SetAutoEmptyFlag(somSelf,bAutoEmpty));
}


/*
 * Overridden method: wpInitData
 */
#pragma linkage(wpwastebskt_wpInitData, system)
SOM_Scope void   SOMLINK wpwastebskt_wpInitData(WPWasteBskt *somSelf);
#ifndef parent_wpInitData
static char *somMN_wpInitData = "wpInitData";
static somId somId_wpInitData = &somMN_wpInitData;
#define parent_wpInitData(somSelf) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpInitData)) \
	 (somSelf))
#endif
#define WPWasteBsktParent_wpInitData parent_wpInitData

/*
 * Overridden method: wpModifyPopupMenu
 */
#pragma linkage(wpwastebskt_wpModifyPopupMenu, system)
SOM_Scope BOOL   SOMLINK wpwastebskt_wpModifyPopupMenu(WPWasteBskt *somSelf,
		HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition);
#ifndef parent_wpModifyPopupMenu
static char *somMN_wpModifyPopupMenu = "wpModifyPopupMenu";
static somId somId_wpModifyPopupMenu = &somMN_wpModifyPopupMenu;
#define parent_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpModifyPopupMenu)) \
	 (somSelf,hwndMenu,hwndCnr,iPosition))
#endif
#define WPWasteBsktParent_wpModifyPopupMenu parent_wpModifyPopupMenu

/*
 * Overridden method: wpMenuItemSelected
 */
#pragma linkage(wpwastebskt_wpMenuItemSelected, system)
SOM_Scope BOOL   SOMLINK wpwastebskt_wpMenuItemSelected(WPWasteBskt *somSelf,
		HWND hwndFrame,
		ULONG ulMenuId);
#ifndef parent_wpMenuItemSelected
static char *somMN_wpMenuItemSelected = "wpMenuItemSelected";
static somId somId_wpMenuItemSelected = &somMN_wpMenuItemSelected;
#define parent_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpMenuItemSelected)) \
	 (somSelf,hwndFrame,ulMenuId))
#endif
#define WPWasteBsktParent_wpMenuItemSelected parent_wpMenuItemSelected

/*
 * Overridden method: wpSetup
 */
#pragma linkage(wpwastebskt_wpSetup, system)
SOM_Scope BOOL   SOMLINK wpwastebskt_wpSetup(WPWasteBskt *somSelf,
		PSZ pszSetupString);
#ifndef parent_wpSetup
static char *somMN_wpSetup = "wpSetup";
static somId somId_wpSetup = &somMN_wpSetup;
#define parent_wpSetup(somSelf,pszSetupString) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpSetup)) \
	 (somSelf,pszSetupString))
#endif
#define WPWasteBsktParent_wpSetup parent_wpSetup

/*
 * Overridden method: wpSaveState
 */
#pragma linkage(wpwastebskt_wpSaveState, system)
SOM_Scope BOOL   SOMLINK wpwastebskt_wpSaveState(WPWasteBskt *somSelf);
#ifndef parent_wpSaveState
static char *somMN_wpSaveState = "wpSaveState";
static somId somId_wpSaveState = &somMN_wpSaveState;
#define parent_wpSaveState(somSelf) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpSaveState)) \
	 (somSelf))
#endif
#define WPWasteBsktParent_wpSaveState parent_wpSaveState

/*
 * Overridden method: wpRestoreState
 */
#pragma linkage(wpwastebskt_wpRestoreState, system)
SOM_Scope BOOL   SOMLINK wpwastebskt_wpRestoreState(WPWasteBskt *somSelf,
		ULONG ulReserved);
#ifndef parent_wpRestoreState
static char *somMN_wpRestoreState = "wpRestoreState";
static somId somId_wpRestoreState = &somMN_wpRestoreState;
#define parent_wpRestoreState(somSelf,ulReserved) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpRestoreState)) \
	 (somSelf,ulReserved))
#endif
#define WPWasteBsktParent_wpRestoreState parent_wpRestoreState

/*
 * Overridden method: wpQueryStyle
 */
#pragma linkage(wpwastebskt_wpQueryStyle, system)
SOM_Scope ULONG   SOMLINK wpwastebskt_wpQueryStyle(WPWasteBskt *somSelf);
#ifndef parent_wpQueryStyle
static char *somMN_wpQueryStyle = "wpQueryStyle";
static somId somId_wpQueryStyle = &somMN_wpQueryStyle;
#define parent_wpQueryStyle(somSelf) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpQueryStyle)) \
	 (somSelf))
#endif
#define WPWasteBsktParent_wpQueryStyle parent_wpQueryStyle

/*
 * Overridden method: wpDragOver
 */
#pragma linkage(wpwastebskt_wpDragOver, system)
SOM_Scope MRESULT   SOMLINK wpwastebskt_wpDragOver(WPWasteBskt *somSelf,
		HWND hwndCnr,
		PDRAGINFO pdrgInfo);
#ifndef parent_wpDragOver
static char *somMN_wpDragOver = "wpDragOver";
static somId somId_wpDragOver = &somMN_wpDragOver;
#define parent_wpDragOver(somSelf,hwndCnr,pdrgInfo) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpDragOver)) \
	 (somSelf,hwndCnr,pdrgInfo))
#endif
#define WPWasteBsktParent_wpDragOver parent_wpDragOver

/*
 * Overridden method: wpDrop
 */
#pragma linkage(wpwastebskt_wpDrop, system)
SOM_Scope MRESULT   SOMLINK wpwastebskt_wpDrop(WPWasteBskt *somSelf,
		HWND hwndCnr,
		PDRAGINFO pdrgInfo,
		PDRAGITEM pdrgItem);
#ifndef parent_wpDrop
static char *somMN_wpDrop = "wpDrop";
static somId somId_wpDrop = &somMN_wpDrop;
#define parent_wpDrop(somSelf,hwndCnr,pdrgInfo,pdrgItem) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpDrop)) \
	 (somSelf,hwndCnr,pdrgInfo,pdrgItem))
#endif
#define WPWasteBsktParent_wpDrop parent_wpDrop

/*
 * Overridden method: wpAddFolderIncludePage
 */
#pragma linkage(wpwastebskt_wpAddFolderIncludePage, system)
SOM_Scope ULONG   SOMLINK wpwastebskt_wpAddFolderIncludePage(WPWasteBskt *somSelf,
		HWND hwndNotebook);
#ifndef parent_wpAddFolderIncludePage
static char *somMN_wpAddFolderIncludePage = "wpAddFolderIncludePage";
static somId somId_wpAddFolderIncludePage = &somMN_wpAddFolderIncludePage;
#define parent_wpAddFolderIncludePage(somSelf,hwndNotebook) \
	((SOM_ParentResolveE(WPFolder, SOM_CurrentClass, wpAddFolderIncludePage)) \
	 (somSelf,hwndNotebook))
#endif
#define WPWasteBsktParent_wpAddFolderIncludePage parent_wpAddFolderIncludePage

/*
 * Overridden method: wpAddSettingsPages
 */
#pragma linkage(wpwastebskt_wpAddSettingsPages, system)
SOM_Scope BOOL   SOMLINK wpwastebskt_wpAddSettingsPages(WPWasteBskt *somSelf,
		HWND hwndNotebook);
#ifndef parent_wpAddSettingsPages
static char *somMN_wpAddSettingsPages = "wpAddSettingsPages";
static somId somId_wpAddSettingsPages = &somMN_wpAddSettingsPages;
#define parent_wpAddSettingsPages(somSelf,hwndNotebook) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpAddSettingsPages)) \
	 (somSelf,hwndNotebook))
#endif
#define WPWasteBsktParent_wpAddSettingsPages parent_wpAddSettingsPages

/*
 * Temporary class data structure used only in class creation
 */
static somClassDataStructure WPWasteBskttempClassData;

/*
 * Initialize the class data structure
 */
struct WPWasteBsktClassDataStructure WPWasteBsktClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct WPWasteBsktCClassDataStructure WPWasteBsktCClassData = {(somMethodTab *) NULL};

/*
 * New Method: QueryAutoEmptyFlag
 */
#pragma linkage(wpwastebskt_QueryAutoEmptyFlag, system)
SOM_Scope BOOL   SOMLINK wpwastebskt_QueryAutoEmptyFlag(WPWasteBskt *somSelf);
static char *somMN_QueryAutoEmptyFlag = "QueryAutoEmptyFlag";
static somId somId_QueryAutoEmptyFlag = &somMN_QueryAutoEmptyFlag;
static char *somDS_QueryAutoEmptyFlag = somMD_WPWasteBskt_QueryAutoEmptyFlag;
static somId somDI_QueryAutoEmptyFlag = &somDS_QueryAutoEmptyFlag;
#pragma linkage(somRD_QueryAutoEmptyFlag, system)
static BOOL   SOMLINK somRD_QueryAutoEmptyFlag(WPWasteBskt *somSelf)
{
	return ((BOOL) va_somDispatchL(somSelf, somId_QueryAutoEmptyFlag,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_QueryAutoEmptyFlag)));
}

/*
 * New Method: SetAutoEmptyFlag
 */
#pragma linkage(wpwastebskt_SetAutoEmptyFlag, system)
SOM_Scope BOOL   SOMLINK wpwastebskt_SetAutoEmptyFlag(WPWasteBskt *somSelf,
		BOOL bAutoEmpty);
static char *somMN_SetAutoEmptyFlag = "SetAutoEmptyFlag";
static somId somId_SetAutoEmptyFlag = &somMN_SetAutoEmptyFlag;
static char *somDS_SetAutoEmptyFlag = somMD_WPWasteBskt_SetAutoEmptyFlag;
static somId somDI_SetAutoEmptyFlag = &somDS_SetAutoEmptyFlag;
#pragma linkage(somRD_SetAutoEmptyFlag, system)
static BOOL   SOMLINK somRD_SetAutoEmptyFlag(WPWasteBskt *somSelf,
		BOOL bAutoEmpty)
{
	return ((BOOL) va_somDispatchL(somSelf, somId_SetAutoEmptyFlag,
		_somGetMethodDescriptor(SOM_GetClass(somSelf),somId_SetAutoEmptyFlag),bAutoEmpty));
}

/*
 * Routines to create the class object
 */

/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t WPWasteBsktSM[] = {
    {    &WPWasteBsktClassData.QueryAutoEmptyFlag,
         &somId_QueryAutoEmptyFlag,
         &somDI_QueryAutoEmptyFlag,
         (somMethodProc *) wpwastebskt_QueryAutoEmptyFlag,
         (somMethodProc *) somRD_QueryAutoEmptyFlag,
         (somMethodProc *) somAP_QueryAutoEmptyFlag    },
    {    &WPWasteBsktClassData.SetAutoEmptyFlag,
         &somId_SetAutoEmptyFlag,
         &somDI_SetAutoEmptyFlag,
         (somMethodProc *) wpwastebskt_SetAutoEmptyFlag,
         (somMethodProc *) somRD_SetAutoEmptyFlag,
         (somMethodProc *) somAP_SetAutoEmptyFlag    },
};


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t WPWasteBsktOM[] = {
    {    &somId_wpInitData,
         (somMethodProc *) wpwastebskt_wpInitData    },
    {    &somId_wpModifyPopupMenu,
         (somMethodProc *) wpwastebskt_wpModifyPopupMenu    },
    {    &somId_wpMenuItemSelected,
         (somMethodProc *) wpwastebskt_wpMenuItemSelected    },
    {    &somId_wpSetup,
         (somMethodProc *) wpwastebskt_wpSetup    },
    {    &somId_wpSaveState,
         (somMethodProc *) wpwastebskt_wpSaveState    },
    {    &somId_wpRestoreState,
         (somMethodProc *) wpwastebskt_wpRestoreState    },
    {    &somId_wpQueryStyle,
         (somMethodProc *) wpwastebskt_wpQueryStyle    },
    {    &somId_wpDragOver,
         (somMethodProc *) wpwastebskt_wpDragOver    },
    {    &somId_wpDrop,
         (somMethodProc *) wpwastebskt_wpDrop    },
    {    &somId_wpAddFolderIncludePage,
         (somMethodProc *) wpwastebskt_wpAddFolderIncludePage    },
    {    &somId_wpAddSettingsPages,
         (somMethodProc *) wpwastebskt_wpAddSettingsPages    },
};

static void WPWasteBsktsomInitializeClass ()
{
	int i;
	somStaticMethod_t *smp;
	somOverrideMethod_t *omp;

/*
 * Add the Static Methods.
 */
	for (smp = WPWasteBsktSM, i = 0; i < 2; smp++, i++)
	    *(smp->classData) =
	        _somAddStaticMethod (WPWasteBskttempClassData.classObject,
	            *(smp->methodId), *(smp->methodDescriptor),
	            smp->method, smp->redispatchStub,
	            smp->applyStub);


/*
 * Override methods.
 */
	for (omp = WPWasteBsktOM, i = 0; i < 11; omp++, i++)
	    _somOverrideSMethod (WPWasteBskttempClassData.classObject,
	        *(omp->methodId), omp->method);

}

#pragma linkage(WPWasteBsktsomCreateClass, system)
static void SOMLINK WPWasteBsktsomCreateClass(SOMClass *pClsObj,
                           SOMClass *mClsObj)
{
    WPWasteBskttempClassData.classObject = _somNew (mClsObj);
    _somInitClass (WPWasteBskttempClassData.classObject,
		"WPWasteBskt",
		pClsObj,
		sizeof(WPWasteBsktData),
		WPWasteBskt_MaxNoMethods,
		WPWasteBskt_MajorVersion,
		WPWasteBskt_MinorVersion);
    WPWasteBsktCClassData.instanceDataToken = 
	_somGetInstanceToken(WPWasteBskttempClassData.classObject);
    WPWasteBsktsomInitializeClass();
    WPWasteBsktCClassData.parentMtab =
	_somGetPClsMtab(WPWasteBskttempClassData.classObject);
    _somSetClassData(WPWasteBskttempClassData.classObject, (somClassDataStructure *)&WPWasteBsktClassData);
    _somClassReady(WPWasteBskttempClassData.classObject);
    /* make newly created class object visible */
    WPWasteBsktClassData.classObject = WPWasteBskttempClassData.classObject;
}

WPWasteBskt * SOMLINK WPWasteBsktNewClass (integer4 scemajorVersion,
		integer4 sceminorVersion)
{
    SOMClass *pClsObj;
    SOMClass *mClsObj;

    /* Check the version numbers */
    if (((scemajorVersion != 0) && 
         (scemajorVersion != WPWasteBskt_MajorVersion)) ||
        ((sceminorVersion != 0) && 
         (sceminorVersion > WPWasteBskt_MinorVersion))) {
	somPrintf("WPWasteBsktNewClass: Error, bad version numbers.\n");
	SOM_Error(SOMERROR_BadVersion);
    }
    /* Don't do anything if class object is already created. */
    if (WPWasteBsktClassData.classObject != (SOMAny *) NULL)
	return(WPWasteBsktClassData.classObject);

    /* Make sure the environment is initialized. */
    if (SOMClassMgrObject == (SOMAny *) NULL) somEnvironmentNew();
    if (SOMClassMgrObject == (SOMAny *) NULL)
	SOM_Error(SOMERROR_CouldNotStartup);

    /* Get the parent class object. */
    WPFolderNewClass(1,2);	/* static reference */
    pClsObj = _somFindClass(SOMClassMgrObject,
		SOM_IdFromString("WPFolder"), 1, 2);
    if (pClsObj == (SOMClass *) NULL)
	SOM_Error(SOMERROR_NoParentClass);

    /* Explicit metaclass, so get it */ 
    M_WPWasteBsktNewClass(0,0);	/* static reference */
    mClsObj = _somFindClass(SOMClassMgrObject,
		SOM_IdFromString("M_WPWasteBskt"), 0, 0);
    if (mClsObj == (SOMClass *) NULL)
	SOM_Error(SOMERROR_NoMetaClass);

    somConstructClass(WPWasteBsktsomCreateClass, pClsObj, mClsObj,
		     &WPWasteBskttempClassData);
    return (WPWasteBsktClassData.classObject);
}

#endif                   /* WPWasteBskt_Class_Source */

#endif       /* wastebsk_ih */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wastebsk.ih.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitih: 1.59
 */

#ifndef wastebsk_mih
#define wastebsk_mih


/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
#define SOM_Scope extern "C"
#else
#define SOM_Scope extern
#endif
#endif

#ifndef SOM_CurrentClass
#define SOM_CurrentClass M_WPWasteBsktCClassData.parentMtab
#endif

#define M_WPWasteBskt_MaxNoMethods 0

/*
 * Instance data
 */
typedef void M_WPWasteBsktData;

/*
 * Trace/Debug macro
 */
#ifndef M_WPWasteBsktMethodDebug
#define M_WPWasteBsktMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * Begin stuff that only goes in the primary file
 */
#ifdef M_WPWasteBskt_Class_Source

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Generate the Apply Stubs.
 */

/*
 * Overridden method: wpclsQueryTitle
 */
#pragma linkage(wpwastebsktcls_wpclsQueryTitle, system)
SOM_Scope PSZ   SOMLINK wpwastebsktcls_wpclsQueryTitle(M_WPWasteBskt *somSelf);
#ifndef parent_wpclsQueryTitle
static char *somMN_wpclsQueryTitle = "wpclsQueryTitle";
static somId somId_wpclsQueryTitle = &somMN_wpclsQueryTitle;
#define parent_wpclsQueryTitle(somSelf) \
	((SOM_ParentResolveE(M_WPObject, SOM_CurrentClass, wpclsQueryTitle)) \
	 (somSelf))
#endif
#define M_WPWasteBsktParent_wpclsQueryTitle parent_wpclsQueryTitle

/*
 * Overridden method: wpclsInitData
 */
#pragma linkage(wpwastebsktcls_wpclsInitData, system)
SOM_Scope void   SOMLINK wpwastebsktcls_wpclsInitData(M_WPWasteBskt *somSelf);
#ifndef parent_wpclsInitData
static char *somMN_wpclsInitData = "wpclsInitData";
static somId somId_wpclsInitData = &somMN_wpclsInitData;
#define parent_wpclsInitData(somSelf) \
	((SOM_ParentResolveE(M_WPObject, SOM_CurrentClass, wpclsInitData)) \
	 (somSelf))
#endif
#define M_WPWasteBsktParent_wpclsInitData parent_wpclsInitData

/*
 * Overridden method: wpclsQueryIcon
 */
#pragma linkage(wpwastebsktcls_wpclsQueryIcon, system)
SOM_Scope HPOINTER   SOMLINK wpwastebsktcls_wpclsQueryIcon(M_WPWasteBskt *somSelf);
#ifndef parent_wpclsQueryIcon
static char *somMN_wpclsQueryIcon = "wpclsQueryIcon";
static somId somId_wpclsQueryIcon = &somMN_wpclsQueryIcon;
#define parent_wpclsQueryIcon(somSelf) \
	((SOM_ParentResolveE(M_WPObject, SOM_CurrentClass, wpclsQueryIcon)) \
	 (somSelf))
#endif
#define M_WPWasteBsktParent_wpclsQueryIcon parent_wpclsQueryIcon

/*
 * Overridden method: wpclsUnInitData
 */
#pragma linkage(wpwastebsktcls_wpclsUnInitData, system)
SOM_Scope void   SOMLINK wpwastebsktcls_wpclsUnInitData(M_WPWasteBskt *somSelf);
#ifndef parent_wpclsUnInitData
static char *somMN_wpclsUnInitData = "wpclsUnInitData";
static somId somId_wpclsUnInitData = &somMN_wpclsUnInitData;
#define parent_wpclsUnInitData(somSelf) \
	((SOM_ParentResolveE(M_WPObject, SOM_CurrentClass, wpclsUnInitData)) \
	 (somSelf))
#endif
#define M_WPWasteBsktParent_wpclsUnInitData parent_wpclsUnInitData

/*
 * Temporary class data structure used only in class creation
 */
static somClassDataStructure M_WPWasteBskttempClassData;

/*
 * Initialize the class data structure
 */
struct M_WPWasteBsktClassDataStructure M_WPWasteBsktClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct M_WPWasteBsktCClassDataStructure M_WPWasteBsktCClassData = {(somMethodTab *) NULL};

/*
 * Routines to create the class object
 */

/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_WPWasteBsktOM[] = {
    {    &somId_wpclsQueryTitle,
         (somMethodProc *) wpwastebsktcls_wpclsQueryTitle    },
    {    &somId_wpclsInitData,
         (somMethodProc *) wpwastebsktcls_wpclsInitData    },
    {    &somId_wpclsQueryIcon,
         (somMethodProc *) wpwastebsktcls_wpclsQueryIcon    },
    {    &somId_wpclsUnInitData,
         (somMethodProc *) wpwastebsktcls_wpclsUnInitData    },
};

static void M_WPWasteBsktsomInitializeClass ()
{
	int i;
	somOverrideMethod_t *omp;

/*
 * Override methods.
 */
	for (omp = M_WPWasteBsktOM, i = 0; i < 4; omp++, i++)
	    _somOverrideSMethod (M_WPWasteBskttempClassData.classObject,
	        *(omp->methodId), omp->method);

}

#pragma linkage(M_WPWasteBsktsomCreateClass, system)
static void SOMLINK M_WPWasteBsktsomCreateClass(SOMClass *pClsObj,
                           SOMClass *mClsObj)
{
    M_WPWasteBskttempClassData.classObject = _somNew (mClsObj);
    _somInitClass (M_WPWasteBskttempClassData.classObject,
		"M_WPWasteBskt",
		pClsObj,
		0,
		M_WPWasteBskt_MaxNoMethods,
		M_WPWasteBskt_MajorVersion,
		M_WPWasteBskt_MinorVersion);
    M_WPWasteBsktCClassData.instanceDataToken = 
	_somGetInstanceToken(M_WPWasteBskttempClassData.classObject);
    M_WPWasteBsktsomInitializeClass();
    M_WPWasteBsktCClassData.parentMtab =
	_somGetPClsMtab(M_WPWasteBskttempClassData.classObject);
    _somSetClassData(M_WPWasteBskttempClassData.classObject, (somClassDataStructure *)&M_WPWasteBsktClassData);
    _somClassReady(M_WPWasteBskttempClassData.classObject);
    /* make newly created class object visible */
    M_WPWasteBsktClassData.classObject = M_WPWasteBskttempClassData.classObject;
}

M_WPWasteBskt * SOMLINK M_WPWasteBsktNewClass (integer4 scemajorVersion,
		integer4 sceminorVersion)
{
    SOMClass *pClsObj;
    SOMClass *mClsObj;

    /* Check the version numbers */
    if (((scemajorVersion != 0) && 
         (scemajorVersion != M_WPWasteBskt_MajorVersion)) ||
        ((sceminorVersion != 0) && 
         (sceminorVersion > M_WPWasteBskt_MinorVersion))) {
	somPrintf("M_WPWasteBsktNewClass: Error, bad version numbers.\n");
	SOM_Error(SOMERROR_BadVersion);
    }
    /* Don't do anything if class object is already created. */
    if (M_WPWasteBsktClassData.classObject != (SOMAny *) NULL)
	return(M_WPWasteBsktClassData.classObject);

    /* Make sure the environment is initialized. */
    if (SOMClassMgrObject == (SOMAny *) NULL) somEnvironmentNew();
    if (SOMClassMgrObject == (SOMAny *) NULL)
	SOM_Error(SOMERROR_CouldNotStartup);

    /* Get the parent class object. */
    M_WPFolderNewClass(1,2);	/* static reference */
    pClsObj = _somFindClass(SOMClassMgrObject,
		SOM_IdFromString("M_WPFolder"), 1, 2);
    if (pClsObj == (SOMClass *) NULL)
	SOM_Error(SOMERROR_NoParentClass);

    /* Use parent's metaclass */ 
    mClsObj = SOM_GetClass(pClsObj);

    somConstructClass(M_WPWasteBsktsomCreateClass, pClsObj, mClsObj,
		     &M_WPWasteBskttempClassData);
    return (M_WPWasteBsktClassData.classObject);
}

#endif                   /* M_WPWasteBskt_Class_Source */

#endif       /* wastebsk_ih */
